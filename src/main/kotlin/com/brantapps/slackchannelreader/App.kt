/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package com.brantapps.slackchannelreader

import com.jakewharton.retrofit2.converter.kotlinx.serialization.asConverterFactory
import kotlinx.serialization.json.Json
import okhttp3.MediaType
import okhttp3.OkHttpClient
import okhttp3.logging.HttpLoggingInterceptor
import retrofit2.Retrofit
import retrofit2.adapter.rxjava2.RxJava2CallAdapterFactory

class ChannelReader {

    @kotlinx.serialization.UnstableDefault
    companion object {
        private val contentType = MediaType.get("application/json")
        val retrofit: Retrofit = Retrofit.Builder()
                .baseUrl("https://slack.com/api/")
                .addCallAdapterFactory(RxJava2CallAdapterFactory.create())
                .addConverterFactory(Json.nonstrict.asConverterFactory(contentType))
                .client(buildOkHttpClient())
                .build()

        fun buildOkHttpClient(): OkHttpClient {
            val logging = HttpLoggingInterceptor()
            logging.level = HttpLoggingInterceptor.Level.BODY
            val httpClient = OkHttpClient.Builder()
//            httpClient.addInterceptor(logging)
            return httpClient.build()
        }
    }
}

fun main(args: Array<String>) {
    if (args[0] == "channel-viz") {
        channelAnalysisApp(args[1], args[2].toLong())
    }

    if (args[0] == "dump-popular-messages") {
        dumpPopularMessagesApp(args[1], args[2], args[3].toLong(), args[4].toInt())
    }
}
